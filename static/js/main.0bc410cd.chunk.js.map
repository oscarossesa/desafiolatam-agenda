{"version":3,"sources":["containers/LoginForm/LoginForm.actions.js","containers/PrivateRoute/PrivateRoute.reducers.js","containers/Episode/Episode.actions.js","containers/LoginForm/LoginForm.reducer.js","containers/Episode/Episode.reducer.js","containers/Character/Character.actions.js","containers/Character/Character.reducer.js","config/store.js","views/PublicPage.js","views/PrivatePage.js","containers/PrivateRoute/PrivateRoute.container.js","containers/LoginForm/LoginForm.container.js","containers/CheckSession/CheckSession.container.js","views/LoginPage.js","containers/Episode/Episode.container.js","views/EpisodePage.js","containers/Character/Character.container.js","views/CharacterPage.js","components/NavBar/ButtonAppBar.js","App.js","index.js"],"names":["LOGIN_ERROR","LOGIN_SUCCESS","onLogin","payload","dispatch","getState","foundUser","loginForm","users","find","user","email","password","type","onLoginSuccess","onLoginError","error","initialState","loggedIn","privateRouteReducer","state","action","LOAD_EPISODES_SUCCESS","ADD_FAVORITE_EPISODE","loadEpisodesSuccess","createAction","name","favoriteEpisodes","favoriteCharacters","loginFormReducer","id","userId","concat","episodeId","filter","loading","response","episodes","episodeReducer","results","isFavoriteEpisode","LOAD_CHARACTERS_SUCCESS","loadCharactersSuccess","characters","characterReducer","console","log","reducer","combineReducers","episode","character","store","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","PublicPage","PrivatePage","PrivateRoute","props","isLoggedIn","useSelector","Boolean","Component","component","restProps","render","componentProps","to","useStyles","makeStyles","theme","root","padding","spacing","LoginForm","classes","useDispatch","useState","emailValue","setEmailValue","passwordValue","setPasswordValue","Grid","container","justify","item","xs","Paper","className","Typography","variant","onSubmit","event","preventDefault","FormControl","InputLabel","htmlFor","Input","value","onChange","target","Button","color","CheckSession","children","LoginPage","EpisodeContainer","useEffect","a","Axios","get","data","width","overflowX","table","minWidth","handleOnAddFavorite","addFavoriteEpisode","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","onClick","EpisodePage","CharacterContainer","grid","marginLeft","marginRight","marginTop","card","maxWidth","margin","media","height","paddingTop","index","Card","CardMedia","image","title","CardContent","CardActions","IconButton","CharacterPage","flexGrow","link","textAlign","textDecoration","ButtonAppBar","AppBar","position","Toolbar","App","CssBaseline","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0bc410cd.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\n\r\nexport function onLogin (payload) {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const foundUser = state.loginForm.users.find(user => user.email === payload.email && user.password === payload.password)\r\n\r\n    if (foundUser) {\r\n      dispatch(onLoginSuccess({ user: foundUser }))\r\n    } else {\r\n      dispatch(onLoginError({ error: '401' }))\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLoginError (payload) {\r\n  return {\r\n    payload,\r\n    type: LOGIN_ERROR\r\n  }\r\n}\r\n\r\nexport function onLoginSuccess (payload) {\r\n  return {\r\n    payload,\r\n    type: LOGIN_SUCCESS\r\n  }\r\n}\r\n","import { LOGIN_SUCCESS } from '../LoginForm/LoginForm.actions'\r\n\r\nconst initialState = {\r\n  loggedIn: null\r\n}\r\n\r\nfunction privateRouteReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS: {\r\n      return { ...state, loggedIn: action.payload.user }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default privateRouteReducer\r\n","import Axios from 'axios'\r\n\r\nexport const LOAD_EPISODES_SUCCESS = 'LOAD_EPISODES_SUCCESS'\r\nexport const LOAD_EPISODES_ERROR = 'LOAD_EPISODES_ERROR'\r\nexport const ADD_FAVORITE_EPISODE = 'ADD_FAVORITE_EPISODE'\r\n\r\nexport const getEpisodes = () => async dispatch => {\r\n  // dispatch(loadingEpisodes())\r\n  try {\r\n    const response = await Axios.get('https://rickandmortyapi.com/api/episode')\r\n    dispatch(loadEpisodesSuccess(response.data))\r\n  } catch (error) {\r\n    console.log('error')\r\n  }\r\n}\r\n\r\nconst loadEpisodesSuccess = payload => ({\r\n  payload,\r\n  type: LOAD_EPISODES_SUCCESS\r\n})\r\n\r\nexport const addFavoriteEpisode = id => (dispatch, getState) => {\r\n  const state = getState()\r\n  const user = state.loggedIn\r\n  console.log(user)\r\n  dispatch(createAction(ADD_FAVORITE_EPISODE, { userId: user.id, episodeId: id }))\r\n}\r\n\r\nconst createAction = (type, payload) => {\r\n  if (payload) {\r\n    return {\r\n      type,\r\n      payload\r\n    }\r\n  } else return { type }\r\n}\r\n","import { ADD_FAVORITE_EPISODE } from '../Episode/Episode.actions'\r\n\r\nconst initialState = {\r\n  users: [\r\n    {\r\n      name: 'Oscar',\r\n      email: 'oscar.osses@chilecompra.cl',\r\n      password: 'oscar123',\r\n      favoriteEpisodes: ['1', '2', '3'],\r\n      favoriteCharacters: ['1', '2', '3']\r\n    },\r\n    {\r\n      name: 'Orlando',\r\n      email: 'orlando.marin@chilecompra.cl',\r\n      password: 'orlando123',\r\n      favoriteEpisodes: ['5', '6', '3'],\r\n      favoriteCharacters: ['11', '12', '23']\r\n    }\r\n  ]\r\n}\r\n\r\nfunction loginFormReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_FAVORITE_EPISODE: {\r\n      const user = state.users.find(user => user.id === action.payload.userId)\r\n      user.favoriteEpisodes = user.favoriteEpisodes.concat([action.payload.episodeId])\r\n      // console.log(user)\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload.userId).concat(user)\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default loginFormReducer\r\n","import { LOAD_EPISODES_SUCCESS, ADD_FAVORITE_EPISODE } from './Episode.actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  response: null,\r\n  error: false,\r\n  episodes: []\r\n}\r\n\r\nfunction episodeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_EPISODES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n        episodes: state.episodes.concat(action.payload.results),\r\n        loading: false,\r\n        error: false\r\n      }\r\n    case ADD_FAVORITE_EPISODE:\r\n      return {\r\n        ...state,\r\n        isFavoriteEpisode: action.payload\r\n      }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default episodeReducer\r\n","import Axios from 'axios'\r\n\r\nexport const LOAD_CHARACTERS_SUCCESS = 'LOAD_CHARACTERS_SUCCESS'\r\n\r\nexport const getCharacters = () => async dispatch => {\r\n  try {\r\n    const response = await Axios.get('https://rickandmortyapi.com/api/character/')\r\n    dispatch(loadCharactersSuccess(response.data))\r\n  } catch (error) {\r\n    console.log('error')\r\n  }\r\n}\r\n\r\nexport const loadCharactersSuccess = payload => ({\r\n  payload,\r\n  type: LOAD_CHARACTERS_SUCCESS\r\n})\r\n","import { LOAD_CHARACTERS_SUCCESS } from './Character.actions'\r\n\r\nconst initialState = {\r\n  characters: []\r\n}\r\n\r\nfunction characterReducer (state = initialState, action) {\r\n  console.log('characterReducer', action)\r\n\r\n  switch (action.type) {\r\n    case LOAD_CHARACTERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        characters: state.characters.concat(action.payload.results)\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default characterReducer\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport privateRouteReducer from '../containers/PrivateRoute/PrivateRoute.reducers'\r\nimport loginFormReducer from '../containers/LoginForm/LoginForm.reducer'\r\nimport thunk from 'redux-thunk'\r\nimport episodeReducer from '../containers/Episode/Episode.reducer'\r\nimport characterReducer from '../containers/Character/Character.reducer'\r\n\r\nconst reducer = combineReducers({\r\n  loggedIn: privateRouteReducer,\r\n  loginForm: loginFormReducer,\r\n  episode: episodeReducer,\r\n  character: characterReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  {},\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n  )\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\n\r\nconst PublicPage = () => {\r\n  return <b>PublicPage</b>\r\n}\r\n\r\nexport default PublicPage\r\n","import React from 'react'\r\n\r\nconst PrivatePage = () => {\r\n  return <b>PrivatePage</b>\r\n}\r\n\r\nexport default PrivatePage\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PrivateRoute = (props) => {\r\n  const { isLoggedIn } = useSelector(state => {\r\n    const { loggedIn } = state.loggedIn\r\n\r\n    return { isLoggedIn: Boolean(loggedIn) }\r\n  })\r\n\r\n  const { component: Component, ...restProps } = props\r\n\r\n  return (\r\n    <Route\r\n      {...restProps}\r\n      render={componentProps => {\r\n        if (!isLoggedIn) {\r\n          return <Redirect to='/login' />\r\n        }\r\n\r\n        return <Component {...componentProps} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.any\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { onLogin } from './LoginForm.actions'\r\nimport { Grid, FormControl, InputLabel, Input, Button, Paper, Typography, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 4)\r\n  }\r\n}))\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [emailValue, setEmailValue] = useState('')\r\n  const [passwordValue, setPasswordValue] = useState('')\r\n  const handleOnChangeEmail = event => setEmailValue(event.target.value)\r\n  const handleOnChangePassword = event => setPasswordValue(event.target.value)\r\n\r\n  const handleOnSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    dispatch(onLogin({ email: emailValue, password: passwordValue }))\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='center'>\r\n      <Grid item xs={6}>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n            Ingreso de usuarios\r\n          </Typography>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"my-input-email\">Correo</InputLabel>\r\n              <Input id=\"my-input-email\" value={emailValue} onChange={handleOnChangeEmail} />\r\n            </FormControl>\r\n            <br />\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"my-input-password\">Contraseña</InputLabel>\r\n              <Input id=\"my-input-password\" value={passwordValue} onChange={handleOnChangePassword} />\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Button type='submit' variant='contained' color='primary'>Login</Button>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst CheckSession = props => {\r\n  const { isLoggedIn } = useSelector(state => {\r\n    const { loggedIn } = state.loggedIn\r\n\r\n    return { isLoggedIn: Boolean(loggedIn) }\r\n  })\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to='/private' />\r\n  }\r\n\r\n  return props.children\r\n}\r\n\r\nexport default CheckSession\r\n","import React from 'react'\r\nimport LoginFormContainer from '../containers/LoginForm/LoginForm.container'\r\nimport CheckSessionContainer from '../containers/CheckSession/CheckSession.container'\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <CheckSessionContainer>\r\n      <LoginFormContainer />\r\n    </CheckSessionContainer>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getEpisodes, addFavoriteEpisode } from './Episode.actions'\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@material-ui/core'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst EpisodeContainer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { episodes, favoriteEpisodes } = useSelector(state =>\r\n    ({\r\n      episodes: state.episode.episodes,\r\n      favoriteEpisodes: state.loggedIn.favoriteEpisodes\r\n    }))\r\n\r\n  console.log('favoriteEpisodes', favoriteEpisodes)\r\n\r\n  useEffect(() => {\r\n    dispatch(getEpisodes())\r\n  }, [])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      overflowX: 'auto'\r\n    },\r\n    table: {\r\n      minWidth: 650\r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  const handleOnAddFavorite = id => event => {\r\n    console.log('handleOnAddFavorite', id)\r\n    dispatch(addFavoriteEpisode(id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\">#</TableCell>\r\n                <TableCell align=\"left\">Nombre</TableCell>\r\n                <TableCell align=\"left\">Episodio</TableCell>\r\n                <TableCell align=\"center\">Favorito</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {episodes.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.episode}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <FavoriteIcon\r\n                      onClick={handleOnAddFavorite(row.id)}\r\n                    />\r\n                    <FavoriteBorderIcon />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EpisodeContainer\r\n","import React from 'react'\r\nimport EpisodeContainer from '../containers/Episode/Episode.container'\r\n\r\nconst EpisodePage = () => {\r\n  return <EpisodeContainer />\r\n}\r\n\r\nexport default EpisodePage\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCharacters } from './Character.actions'\r\nimport { Grid, Card, CardMedia, CardContent, CardActions, IconButton, Typography, makeStyles } from '@material-ui/core'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\n\r\nconst CharacterContainer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { characters } = useSelector(state =>\r\n    ({\r\n      characters: state.character.characters\r\n    }))\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacters())\r\n  }, [])\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    grid: {\r\n      marginLeft: '20px',\r\n      marginRight: '100px',\r\n      marginTop: '20px'\r\n    },\r\n    card: {\r\n      maxWidth: 200,\r\n      minWidth: 200,\r\n      margin: '0.5em'\r\n    },\r\n    media: {\r\n      height: 150,\r\n      paddingTop: '56.25%' // 16:9\r\n    }\r\n  }))\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={10} className={classes.grid}>\r\n        {characters.map((character, index) => (\r\n          <Card key={character.id} className={classes.card}>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={character.image}\r\n              title={character.name}\r\n            />\r\n            <CardContent>\r\n              <Typography component='p' variant='h6'>{character.name}</Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CharacterContainer\r\n","import React from 'react'\r\nimport CharacterContainer from '../containers/Character/Character.container'\r\n\r\nconst CharacterPage = () => {\r\n  return <CharacterContainer />\r\n}\r\n\r\nexport default CharacterPage\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, AppBar, Toolbar, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    textAlign: 'right',\r\n    marginRight: '20px',\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}))\r\n\r\nconst ButtonAppBar = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h5' className={classes.title}>\r\n          <Link to='/' className={classes.link}>Proyecto 2 - Desafiolatam</Link>\r\n        </Typography>\r\n        <Typography variant='h6'>\r\n          <Link to='/episode' color='inherit' className={classes.link}>EPISODIOS</Link>\r\n          <Link to='/character' color='inherit' className={classes.link}>PERSONAJES</Link>\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default ButtonAppBar\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './config/store'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport PublicPage from './views/PublicPage'\r\nimport PrivatePage from './views/PrivatePage'\r\nimport PrivateRouteContainer from './containers/PrivateRoute/PrivateRoute.container'\r\nimport LoginPage from './views/LoginPage'\r\nimport EpisodePage from './views/EpisodePage'\r\nimport CharacterPage from './views/CharacterPage'\r\nimport ButtonAppBar from './components/NavBar/ButtonAppBar'\r\nimport { CssBaseline } from '@material-ui/core'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <ButtonAppBar />\r\n        <Switch>\r\n          <Route exact path='/' component={LoginPage} />\r\n          <Route exact path='/login' component={LoginPage} />\r\n          <Route exact path='/public' component={PublicPage} />\r\n          <PrivateRouteContainer exact path='/private' component={PrivatePage} />\r\n          <Route exact path='/episode' component={EpisodePage} />\r\n          <Route exact path='/character' component={CharacterPage} />\r\n          <Route exact path='/403' render={() => <div>403</div>} />\r\n          <Route path='*' render={() => <div>404</div>} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}